import random
import string


class PasswordGenerator:
    def __init__(self, length=12):
        self.length = length

    def generate_password(self, password_type='combination', include_special_characters=True):
        try:
            # Check if the length is a positive integer
            if not isinstance(self.length, int) or self.length <= 0:
                raise ValueError("Length must be a positive integer.")

            remaining_length = self.length

            password_characters = ''
password_characters = ''

            # Define the set of characters based on the chosen password type
            if password_type == 'letters':
                password_characters += string.ascii_letters
            elif password_type == 'numbers':
                password_characters += string.digits
            elif password_type == 'combination':
                password_characters += string.ascii_letters + string.digits

                # Add special characters if requested
            if include_special_characters:
                password_characters += string.punctuation

                # Generate the password with random characters
            password = ''.join(random.choices(password_characters, k=remaining_length))

            # Shuffle the password to ensure randomness
            password = ''.join(random.sample(password, len(password)))

            return password
        except ValueError as ve:
            print(f"Error: {ve}")
            return None


def main():
    try:
        # Gather user inputs
        length = int(input("Enter the length of the password to generate: "))
        password_type = input("Choose the type of password (letters/numbers/combination): ").lower()
        include_special_characters = input("Do you want to include special characters? (yes/no): ").lower() == 'yes'

        # Create an instance of PasswordGenerator
        password_generator = PasswordGenerator(length)

        # Generate the password based on user inputs
        password = password_generator.generate_password(password_type, include_special_characters)

        # Print the generated password
        if password:
            print(f"Generated Password: {password}")
        else:
            print("Failed to generate password.")
    except ValueError:
        print("Invalid input. Please enter a valid integer for password length.")

if __name__ == "__main__":
    main()
